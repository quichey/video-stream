###################################################
# This Compose file provides the development environment for the todo app.
# 
# Seeing the final version of the application bundles the frontend with the
# backend, we are able to "simulate" that by using a proxy to route requests
# to the appropriate service. All requests to /api will be routed to the 
# backend while all other requests will be sent to the client service. While
# there is some overlap in the routing rules, the proxy determines the service
# based on the most specific rule.
#
# To support easier debugging and troubleshooting, phpMyAdmin is also included
# to provide a web interface to the MySQL database.
###################################################

###################################################
# Consolidate all machines required for sending HTML/CSS
# to client computers
# should I put CDN (Content-Delivery-Network) Here?
###################################################

###################################################
# Services
#
# The services define the individual components of our application stack.
# For each service, a separate container will be launched.
###################################################
services:

  ###################################################
  # Service: proxy
  #
  # Do I need this?
  ###################################################
  proxy:
    image: traefik:v2.11
    command: --providers.docker
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ###################################################
  # Service: html
  #
  # deliver all UI html/css stuff
  ###################################################
  html:
    build:
      context: ./
      # this 'target' is the image name
      # TODO: find out image name of my client's things
      # place it here
      target: html-dev
    develop:
      video-stream:
        - path: ./client/src
          action: sync
          target: /usr/local/app/src
        - path: ./client/package.json
          action: rebuild
    labels:
      traefik.http.routers.client.rule: Host(`localhost`)
      traefik.http.services.client.loadbalancer.server.port: 5173


  ###################################################
  # Service: cdn
  #
  # deliver all video/mp4 files
  ###################################################
  cdn:
    build:
      context: ./
      # this 'target' is the image name
      # TODO: find out image name of my client's things
      # place it here
      target: cdn-dev
    develop:
      video-stream:
        - path: ./client/src
          action: sync
          target: /usr/local/app/src
        - path: ./client/package.json
          action: rebuild
    labels:
      traefik.http.routers.client.rule: Host(`localhost`)
      traefik.http.services.client.loadbalancer.server.port: 5173

###################################################
# Volumes
#
# For this application stack, we only have one volume. It's used to persist the
# data for the MySQL service. We are only going to use the default values,
# hence the lack of any configuration for the volume.
###################################################
volumes:
  todo-mysql-data:
